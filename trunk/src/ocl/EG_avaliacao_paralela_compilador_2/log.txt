Banco de dados: 
-----------------------------------------------------------
Tamanho do banco de dados:500 	 Número de variáveis:4
-----------------------------------------------------------
local: 500, global: 250000, grupos:500
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 1:

Melhor:
( 1 + ( x1 * x1 ) )

Aptidao: -1196149599895552.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 2:

Melhor:
( ( x1 - 1 ) * x1 )

Aptidao: -1194751990693888.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 3:

Melhor:
( x1 * ( x1 + ( 1 + x1 ) ) )

Aptidao: -494795968.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 4:

Melhor:
( x1 * ( x1 + ( 1 + x1 ) ) )

Aptidao: -494795968.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 5:

Melhor:
( 1 + ( x1 * ( x1 + x1 ) ) )

Aptidao: -500.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 6:

Melhor:
( 1 + ( x1 * ( x1 + x1 ) ) )

Aptidao: -500.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 7:

Melhor:
( 1 + ( x1 * ( x1 + x1 ) ) )

Aptidao: -500.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 8:

Melhor:
( 1 + ( x1 * ( x1 + x1 ) ) )

Aptidao: -500.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 9:

Melhor:
( 1 + ( x1 * ( x1 + x1 ) ) )

Aptidao: -500.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 10:

Melhor:
( 1 + ( x1 * ( x1 + x1 ) ) )

Aptidao: -500.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 11:

Melhor:
( 1 + ( x1 * ( x1 + x1 ) ) )

Aptidao: -500.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 12:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 13:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 14:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 15:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 16:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 17:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 18:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 19:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 20:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 21:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 22:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 23:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 24:

Melhor:
( 1 * ( ( x1 + x1 ) * x1 ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 25:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 26:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 27:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 28:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 29:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 30:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 31:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 32:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 33:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 34:

Melhor:
( 1 * ( ( x1 + x1 ) * x1 ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 35:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 36:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 37:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 38:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 39:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 40:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 41:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 42:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 43:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 44:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 45:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 46:

Melhor:
( ( ( ( x1 - 1 ) + x1 ) + 1 ) * x1 )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 47:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 48:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 49:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

-------------------------------------
Geração 50:

Melhor:
( 1 * ( x1 * ( x1 + x1 ) ) )

Aptidao: -0.000000
Iniciando a avaliação paralela...
Compilando a população...
float funcaoobjetivo(int p, __global float * dataBase, int line){ 
float x1 = DATABASE(line, 0); 
float x2 = DATABASE(line, 1); 
float x3 = DATABASE(line, 2); 

0.0092603518	0.0092603518	0.0000904960	0.0000017280	0.0093508475
Tempo total: 19.030974
